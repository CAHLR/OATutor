{"ast":null,"code":"import _slicedToArray from \"/Users/rj/open-its/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/rj/open-its/src/ProblemLayout/ProblemCard.js\";\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nexport default function ProblemCard(props) {\n  const classes = useStyles();\n  const bull = React.createElement(\"span\", {\n    className: classes.bullet,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"\\u2022\");\n  const question = props.question;\n  var inputVal = \"\";\n\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        color = _useState2[0],\n        checkCorrect = _useState2[1];\n\n  function submit() {\n    console.log(inputVal);\n\n    if (inputVal == question[0].answer) {\n      checkCorrect(false);\n    } else {\n      checkCorrect(true);\n    }\n  }\n\n  function handleChange(event) {\n    inputVal = event.target.value;\n  }\n\n  return React.createElement(Card, {\n    className: classes.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: classes.questionHeader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, question.partTitle, React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: classes.questionBody,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, question.partBody), React.createElement(TextField, {\n    style: {\n      borderColor: this.state.color\n    },\n    className: classes.inputField,\n    variant: \"outlined\",\n    onChange: evt => handleChange(evt),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })), React.createElement(CardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: classes.button,\n    size: \"small\",\n    onClick: submit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Submit\")));\n}\nconst useStyles = makeStyles({\n  card: {\n    width: '40%',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    marginTop: 20\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)'\n  },\n  title: {\n    fontSize: 14\n  },\n  pos: {\n    marginBottom: 12\n  },\n  button: {\n    backgroundColor: '#8c94ff',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    paddingLeft: 10,\n    paddingRight: 10,\n    width: \"20%\"\n  },\n  questionHeader: {\n    textAlign: 'center',\n    fontSize: 20,\n    marginTop: 0\n  },\n  questionBody: {\n    textAlign: 'center',\n    fontSize: 30,\n    marginTop: 10,\n    marginBottom: 30\n  },\n  inputField: {\n    marginLeft: '35%',\n    width: '30%'\n  }\n});","map":{"version":3,"sources":["/Users/rj/open-its/src/ProblemLayout/ProblemCard.js"],"names":["React","useState","makeStyles","withStyles","Card","CardActions","CardContent","Button","TextField","ProblemCard","props","classes","useStyles","bull","bullet","question","inputVal","color","checkCorrect","submit","console","log","answer","handleChange","event","target","value","card","questionHeader","partTitle","questionBody","partBody","borderColor","state","inputField","evt","button","width","marginLeft","marginRight","marginTop","display","margin","transform","title","fontSize","pos","marginBottom","backgroundColor","paddingLeft","paddingRight","textAlign"],"mappings":"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","sourcesContent":["import React, { useState }  from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField'\n\n\nexport default function ProblemCard(props) {\n    const classes = useStyles();\n    const bull = <span className={classes.bullet}>â€¢</span>;\n    const question = props.question;\n    var inputVal = \"\"\n    const [color, checkCorrect] = useState(\"\");\n\n    function submit() {\n        console.log(inputVal)\n        if (inputVal == question[0].answer) {\n            checkCorrect(false)\n        } else {\n            checkCorrect(true)\n        }\n    }\n\n    function handleChange(event) {\n        inputVal = event.target.value\n    }\n\n    return (\n        <Card className={classes.card}>\n            <CardContent>\n                <h2 className={classes.questionHeader}>\n                    {question.partTitle}\n                    <hr/>\n                </h2>\n\n                <div className = {classes.questionBody}>\n                    {question.partBody}\n                </div>\n\n                <TextField style={{borderColor: this.state.color}}className={classes.inputField} variant=\"outlined\" onChange = {(evt) => handleChange(evt)}></TextField>\n\n\n            </CardContent>\n            <CardActions>\n                <Button className={classes.button} size=\"small\" onClick={submit}>Submit</Button>\n            </CardActions>\n        </Card>\n    );\n}\n\nconst useStyles = makeStyles({\n    card: {\n        width: '40%',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        marginTop: 20\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n\n    button: {\n        backgroundColor: '#8c94ff',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        paddingLeft: 10,\n        paddingRight: 10,\n        width: \"20%\"\n    },\n\n    questionHeader: {\n        textAlign: 'center',\n        fontSize: 20,\n        marginTop: 0,\n    },\n\n    questionBody: {\n        textAlign: 'center',\n        fontSize: 30,\n        marginTop: 10,\n        marginBottom: 30\n    },\n\n    inputField: {\n        marginLeft: '35%',\n        width: '30%',\n\n    }\n\n\n});"]},"metadata":{},"sourceType":"module"}