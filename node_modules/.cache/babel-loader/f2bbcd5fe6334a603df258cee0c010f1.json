{"ast":null,"code":"import _slicedToArray from \"/Users/rj/open-its/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/rj/open-its/src/ProblemLayout/Problem.js\";\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ProblemCard from './ProblemCard';\nexport default function Problem(props) {\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        problemIndex = _useState2[0],\n        updateIndex = _useState2[1];\n\n  const problemData = props.problems[problemIndex];\n  var questionStates = {};\n  var numCorrect = 0;\n  const questions = problemData.parts.map(function (question, index) {\n    questionStates[index] = false;\n    return React.createElement(ProblemCard, {\n      question: question,\n      index: index,\n      answerMade: answerMade,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    });\n  });\n\n  function answerMade(cardIndex, isCorrect) {\n    if (questionStates[cardIndex] === isCorrect) {\n      return;\n    }\n\n    questionStates[cardIndex] = isCorrect;\n\n    if (isCorrect) {\n      numCorrect += 1;\n    } else {\n      numCorrect -= 1;\n    }\n\n    console.log(isCorrect);\n\n    if (numCorrect === Object.keys(questionStates).length) {\n      console.log(\"cool\");\n      updateIndex(problemIndex + 1);\n      questionStates = {};\n      numCorrect = 0;\n    }\n\n    console.log(cardIndex);\n  }\n\n  const classes = useStyles();\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.prompt,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, problemData.prompt, React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  })), questions);\n}\nconst useStyles = makeStyles({\n  prompt: {\n    marginLeft: 50,\n    marginRight: 50,\n    marginTop: 20,\n    textAlign: 'center',\n    fontSize: 30,\n    fontFamily: 'Titillium Web, sans-serif'\n  }\n});","map":{"version":3,"sources":["/Users/rj/open-its/src/ProblemLayout/Problem.js"],"names":["React","useState","makeStyles","ProblemCard","Problem","props","problemIndex","updateIndex","problemData","problems","questionStates","numCorrect","questions","parts","map","question","index","answerMade","cardIndex","isCorrect","console","log","Object","keys","length","classes","useStyles","prompt","marginLeft","marginRight","marginTop","textAlign","fontSize","fontFamily"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA,oBACCJ,QAAQ,CAAC,CAAD,CADT;AAAA;AAAA,QAC5BK,YAD4B;AAAA,QACdC,WADc;;AAEnC,QAAMC,WAAW,GAAGH,KAAK,CAACI,QAAN,CAAeH,YAAf,CAApB;AACA,MAAII,cAAc,GAAG,EAArB;AACA,MAAIC,UAAU,GAAG,CAAjB;AAGA,QAAMC,SAAS,GAAGJ,WAAW,CAACK,KAAZ,CAAkBC,GAAlB,CAAsB,UAASC,QAAT,EAAmBC,KAAnB,EAA0B;AAC9DN,IAAAA,cAAc,CAACM,KAAD,CAAd,GAAwB,KAAxB;AACA,WAAO,oBAAC,WAAD;AAAa,MAAA,QAAQ,EAAED,QAAvB;AAAiC,MAAA,KAAK,EAAEC,KAAxC;AAA+C,MAAA,UAAU,EAAIC,UAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAHiB,CAAlB;;AAOA,WAASA,UAAT,CAAoBC,SAApB,EAA+BC,SAA/B,EAA0C;AACtC,QAAIT,cAAc,CAACQ,SAAD,CAAd,KAA8BC,SAAlC,EAA6C;AAAE;AAAQ;;AACvDT,IAAAA,cAAc,CAACQ,SAAD,CAAd,GAA4BC,SAA5B;;AAEA,QAAIA,SAAJ,EAAe;AACXR,MAAAA,UAAU,IAAI,CAAd;AACH,KAFD,MAEO;AACHA,MAAAA,UAAU,IAAI,CAAd;AACH;;AACDS,IAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;;AAEA,QAAIR,UAAU,KAAKW,MAAM,CAACC,IAAP,CAAYb,cAAZ,EAA4Bc,MAA/C,EAAuD;AACnDJ,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAd,MAAAA,WAAW,CAACD,YAAY,GAAG,CAAhB,CAAX;AACAI,MAAAA,cAAc,GAAG,EAAjB;AACAC,MAAAA,UAAU,GAAG,CAAb;AAEH;;AAEDS,IAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AACH;;AAED,QAAMO,OAAO,GAAGC,SAAS,EAAzB;AAEA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAED,OAAO,CAACE,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKnB,WAAW,CAACmB,MADjB,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,EAMKf,SANL,CADJ;AAUH;AAED,MAAMc,SAAS,GAAGxB,UAAU,CAAC;AACzByB,EAAAA,MAAM,EAAE;AACJC,IAAAA,UAAU,EAAE,EADR;AAEJC,IAAAA,WAAW,EAAE,EAFT;AAGJC,IAAAA,SAAS,EAAE,EAHP;AAIJC,IAAAA,SAAS,EAAE,QAJP;AAKJC,IAAAA,QAAQ,EAAE,EALN;AAMJC,IAAAA,UAAU,EAAE;AANR;AADiB,CAAD,CAA5B","sourcesContent":["import React, { useState }  from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ProblemCard from './ProblemCard'\n\nexport default function Problem(props) {\n    const [problemIndex, updateIndex] = useState(0);\n    const problemData = props.problems[problemIndex];\n    var questionStates = {};\n    var numCorrect = 0;\n\n\n    const questions = problemData.parts.map(function(question, index) {\n        questionStates[index] = false;\n        return <ProblemCard question={question} index={index} answerMade = {answerMade}/>\n    }\n    );\n\n\n    function answerMade(cardIndex, isCorrect) {\n        if (questionStates[cardIndex] === isCorrect) { return }\n        questionStates[cardIndex] = isCorrect;\n\n        if (isCorrect) {\n            numCorrect += 1\n        } else {\n            numCorrect -= 1\n        }\n        console.log(isCorrect);\n\n        if (numCorrect === Object.keys(questionStates).length) {\n            console.log(\"cool\");\n            updateIndex(problemIndex + 1);\n            questionStates = {};\n            numCorrect = 0;\n\n        }\n\n        console.log(cardIndex);\n    }\n\n    const classes = useStyles();\n\n    return (\n        <div>\n            <div className={classes.prompt}>\n                {problemData.prompt}\n                <hr/>\n\n            </div>\n            {questions}\n        </div>\n    );\n}\n\nconst useStyles = makeStyles({\n    prompt: {\n        marginLeft: 50,\n        marginRight: 50,\n        marginTop: 20,\n        textAlign: 'center',\n        fontSize: 30,\n        fontFamily: 'Titillium Web, sans-serif',\n    },\n});"]},"metadata":{},"sourceType":"module"}