{"ast":null,"code":"import _slicedToArray from \"/Users/rj/open-its/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/rj/open-its/src/ProblemLayout/ProblemCard.js\";\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nexport default function ProblemCard(props) {\n  const classes = useStyles();\n  const question = props.question;\n  var inputVal = \"\";\n\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        isCorrect = _useState2[0],\n        answerIs = _useState2[1];\n\n  function submit() {\n    if (inputVal === question.partAnswer) {\n      answerIs(true);\n    } else {\n      answerIs(false);\n    }\n  }\n\n  function handleChange(event) {\n    inputVal = event.target.value;\n  }\n\n  const checkMarkStyle = {\n    opacity: isCorrect === true ? '100' : '0'\n  };\n  return React.createElement(Card, {\n    className: classes.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: classes.questionHeader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, question.partTitle, React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: classes.questionBody,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, question.partBody), React.createElement(TextField, {\n    error: isCorrect === false,\n    className: classes.inputField,\n    variant: \"outlined\",\n    onChange: evt => handleChange(evt),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"hi\"), React.createElement(\"img\", {\n    className: classes.checkImage,\n    style: checkMarkStyle,\n    src: \"https://image.flaticon.com/icons/svg/148/148767.svg\",\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })), React.createElement(CardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: classes.button,\n    size: \"small\",\n    onClick: submit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Submit\")));\n}\nconst useStyles = makeStyles({\n  card: {\n    width: '40%',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    marginBottom: 20\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)'\n  },\n  title: {\n    fontSize: 14\n  },\n  pos: {\n    marginBottom: 12\n  },\n  button: {\n    backgroundColor: '#8c94ff',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    paddingLeft: 10,\n    paddingRight: 10,\n    width: \"20%\"\n  },\n  questionHeader: {\n    textAlign: 'center',\n    fontSize: 20,\n    marginTop: 0\n  },\n  questionBody: {\n    textAlign: 'center',\n    fontSize: 30,\n    marginTop: 10,\n    marginBottom: 30\n  },\n  inputField: {\n    marginLeft: '11.8%',\n    width: '30%'\n  },\n  checkImage: {\n    width: '10%',\n    marginLeft: '10px'\n  }\n});","map":{"version":3,"sources":["/Users/rj/open-its/src/ProblemLayout/ProblemCard.js"],"names":["React","useState","makeStyles","withStyles","Card","CardActions","CardContent","Button","TextField","ProblemCard","props","classes","useStyles","question","inputVal","isCorrect","answerIs","submit","partAnswer","handleChange","event","target","value","checkMarkStyle","opacity","card","questionHeader","partTitle","questionBody","partBody","inputField","evt","checkImage","button","width","marginLeft","marginRight","marginBottom","bullet","display","margin","transform","title","fontSize","pos","backgroundColor","paddingLeft","paddingRight","textAlign","marginTop"],"mappings":"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","sourcesContent":["import React, { useState }  from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField'\n\n\nexport default function ProblemCard(props) {\n    const classes = useStyles();\n    const question = props.question;\n    var inputVal = \"\";\n    const [isCorrect, answerIs] = useState(null);\n\n    function submit() {\n        if (inputVal === question.partAnswer) {\n            answerIs(true)\n        } else {\n            answerIs(false)\n        }\n    }\n\n    function handleChange(event) {\n        inputVal = event.target.value\n    }\n\n    const checkMarkStyle = {opacity: isCorrect === true ? '100' : '0'}\n\n    return (\n        <Card className={classes.card}>\n            <CardContent>\n                <h2 className={classes.questionHeader}>\n                    {question.partTitle}\n                    <hr/>\n                </h2>\n\n                <div className = {classes.questionBody}>\n                    {question.partBody}\n                </div>\n\n                <TextField error={isCorrect === false} className={classes.inputField} variant=\"outlined\" onChange = {(evt) => handleChange(evt)}>hi</TextField>\n                <img className={classes.checkImage} style = {checkMarkStyle} src=\"https://image.flaticon.com/icons/svg/148/148767.svg\" alt=\"\" />\n\n\n            </CardContent>\n            <CardActions>\n                <Button className={classes.button} size=\"small\" onClick={submit}>Submit</Button>\n            </CardActions>\n        </Card>\n    );\n}\n\n\n\nconst useStyles = makeStyles({\n    card: {\n        width: '40%',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        marginBottom: 20\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n\n    button: {\n        backgroundColor: '#8c94ff',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        paddingLeft: 10,\n        paddingRight: 10,\n        width: \"20%\"\n    },\n\n    questionHeader: {\n        textAlign: 'center',\n        fontSize: 20,\n        marginTop: 0,\n    },\n\n    questionBody: {\n        textAlign: 'center',\n        fontSize: 30,\n        marginTop: 10,\n        marginBottom: 30\n    },\n\n    inputField: {\n        marginLeft: '11.8%',\n        width: '30%',\n\n    },\n\n    checkImage: {\n        width: '10%',\n        marginLeft: '10px',\n\n    }\n\n\n});"]},"metadata":{},"sourceType":"module"}