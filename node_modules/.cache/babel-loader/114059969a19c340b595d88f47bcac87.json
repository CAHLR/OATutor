{"ast":null,"code":"var _jsxFileName = \"/Users/rj/open-its/src/ProblemLayout/ProblemCard.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nexport default function ProblemCard(props) {\n  const classes = useStyles();\n  const bull = React.createElement(\"span\", {\n    className: classes.bullet,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"\\u2022\");\n  const question = props.question;\n  var inputVal = \"\";\n\n  function submit() {\n    console.log(inputVal);\n  }\n\n  function handleChange(event) {\n    inputVal = event.target.value;\n  }\n\n  return React.createElement(Card, {\n    className: classes.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: classes.questionHeader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, question.partTitle, React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: classes.questionBody,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, question.partBody), React.createElement(TextField, {\n    className: classes.inputField,\n    variant: \"outlined\",\n    onChange: evt => handleChange(evt),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  })), React.createElement(CardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: classes.button,\n    size: \"small\",\n    onClick: submit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Submit\")));\n}\nconst useStyles = makeStyles({\n  card: {\n    width: '40%',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    marginTop: 20\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)'\n  },\n  title: {\n    fontSize: 14\n  },\n  pos: {\n    marginBottom: 12\n  },\n  button: {\n    backgroundColor: '#8c94ff',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    paddingLeft: 10,\n    paddingRight: 10,\n    width: \"20%\"\n  },\n  questionHeader: {\n    textAlign: 'center',\n    fontSize: 20,\n    marginTop: 0\n  },\n  questionBody: {\n    textAlign: 'center',\n    fontSize: 30,\n    marginTop: 10,\n    marginBottom: 30\n  },\n  inputField: {\n    marginLeft: '35%',\n    width: '30%'\n  }\n});","map":{"version":3,"sources":["/Users/rj/open-its/src/ProblemLayout/ProblemCard.js"],"names":["React","makeStyles","withStyles","Card","CardActions","CardContent","Button","TextField","ProblemCard","props","classes","useStyles","bull","bullet","question","inputVal","submit","console","log","handleChange","event","target","value","card","questionHeader","partTitle","questionBody","partBody","inputField","evt","button","width","marginLeft","marginRight","marginTop","display","margin","transform","title","fontSize","pos","marginBottom","backgroundColor","paddingLeft","paddingRight","textAlign"],"mappings":"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","sourcesContent":["import React  from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField'\n\nexport default function ProblemCard(props) {\n    const classes = useStyles();\n    const bull = <span className={classes.bullet}>â€¢</span>;\n    const question = props.question;\n    var inputVal = \"\"\n\n    function submit() {\n        console.log(inputVal)\n    }\n\n    function handleChange(event) {\n        inputVal = event.target.value\n    }\n\n    return (\n        <Card className={classes.card}>\n            <CardContent>\n                <h2 className={classes.questionHeader}>\n                    {question.partTitle}\n                    <hr/>\n                </h2>\n\n                <div className = {classes.questionBody}>\n                    {question.partBody}\n                </div>\n\n                <TextField className={classes.inputField} variant=\"outlined\" onChange = {(evt) => handleChange(evt)}></TextField>\n\n\n            </CardContent>\n            <CardActions>\n                <Button className={classes.button} size=\"small\" onClick={submit}>Submit</Button>\n            </CardActions>\n        </Card>\n    );\n}\n\nconst useStyles = makeStyles({\n    card: {\n        width: '40%',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        marginTop: 20\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n\n    button: {\n        backgroundColor: '#8c94ff',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        paddingLeft: 10,\n        paddingRight: 10,\n        width: \"20%\"\n    },\n\n    questionHeader: {\n        textAlign: 'center',\n        fontSize: 20,\n        marginTop: 0,\n    },\n\n    questionBody: {\n        textAlign: 'center',\n        fontSize: 30,\n        marginTop: 10,\n        marginBottom: 30\n    },\n\n    inputField: {\n        marginLeft: '35%',\n        width: '30%',\n\n    }\n\n\n});"]},"metadata":{},"sourceType":"module"}