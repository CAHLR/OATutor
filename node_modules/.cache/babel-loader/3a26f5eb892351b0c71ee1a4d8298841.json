{"ast":null,"code":"var _jsxFileName = \"/Users/rj/open-its/src/App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { AppBar, Toolbar } from '@material-ui/core';\nimport ProblemCard from \"./ProblemLayout/ProblemCard\";\nimport { questionData } from \"./QuestionPool/question-1\";\n\nfunction App() {\n  const questions = questionData.questions;\n  return React.createElement(React.Fragment, null, React.createElement(AppBar, {\n    position: \"static\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Open ITS\")), questions.map(card => React.createElement(ProblemCard, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/rj/open-its/src/App.js"],"names":["React","AppBar","Toolbar","ProblemCard","questionData","App","questions","map","card"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,WAAP;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,mBAAhC;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,SAASC,YAAT,QAA6B,2BAA7B;;AAGA,SAASC,GAAT,GAAe;AACb,QAAMC,SAAS,GAAGF,YAAY,CAACE,SAA/B;AAEA,SAEI,0CACA,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CADA,EAKMA,SAAS,CAACC,GAAV,CAAcC,IAAI,IACd,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CALN,CAFJ;AAcD;;AAED,eAAeH,GAAf","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { AppBar, Toolbar } from '@material-ui/core';\nimport ProblemCard from \"./ProblemLayout/ProblemCard\";\nimport { questionData } from \"./QuestionPool/question-1\"\n\n\nfunction App() {\n  const questions = questionData.questions;\n\n  return (\n\n      <>\n      <AppBar position=\"static\">\n          <Toolbar>Open ITS</Toolbar>\n      </AppBar>\n          {\n            questions.map(card =>\n                <ProblemCard></ProblemCard>\n            )\n          }\n\n      </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}